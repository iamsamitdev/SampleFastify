services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: fastify_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-fastify_app_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - fastify_dev_network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: fastify_redis_dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - fastify_dev_network

  # Fastify Application (Development)
  fastify_app_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fastify_app_dev
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-fastify_app_dev}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres123}
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - fastify_dev_network
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  fastify_dev_network:
    driver: bridge
